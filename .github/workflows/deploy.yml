name: Build and deploy Research Bridge to Azure

on:
  push:
    branches:
      - main  # Only trigger on main branch
  workflow_dispatch:

jobs:
  build-client:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Install client dependencies
        run: |
          cd client
          npm install
          npm run build  # Build React app

      - name: Zip client artifact
        run: |
          cd client/build
          zip -r client-release.zip ./*

      - name: Upload client artifact
        uses: actions/upload-artifact@v4
        with:
          name: client-app
          path: client/build/client-release.zip

  build-server:
    runs-on: ubuntu-latest
    needs: build-client  # Wait for client build first
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Install server dependencies
        run: |
          cd server
          npm install
          npm run build --if-present  # If you have a build step (e.g., for TypeScript)

      - name: Zip server artifact
        run: |
          cd server
          zip -r server-release.zip ./* -x '*.git*' -x 'node_modules/**'

      - name: Upload server artifact
        uses: actions/upload-artifact@v4
        with:
          name: server-app
          path: server/server-release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: [build-client, build-server]  # Wait for both builds
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: client-app
          path: client-dist

      - name: Unzip client
        run: |
          unzip client-dist/client-release.zip -d client-dist

      - name: Download server artifact
        uses: actions/download-artifact@v4
        with:
          name: server-app
          path: server-dist

      - name: Unzip server
        run: |
          unzip server-dist/server-release.zip -d server-dist

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_31FCA4689DBF4AB79230F739DFBB02C5 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_805BCF4B782D421BAB33C9C4F42A2F04 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_5271F1AC58EF4B39994C4403EE8D6682 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'myrese'
          slot-name: 'Production'
          package: server-dist  # Deploy server, which will serve the client (adjust if needed)
          # For React-only apps, use `package: client-dist` instead